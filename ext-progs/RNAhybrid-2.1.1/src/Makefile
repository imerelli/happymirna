# Makefile.in generated by automake 1.7.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/RNAhybrid
pkglibdir = $(libdir)/RNAhybrid
pkgincludedir = $(includedir)/RNAhybrid
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = ${SHELL} /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/missing --run tar
AUTOCONF = ${SHELL} /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/missing --run makeinfo
OBJEXT = o
PACKAGE = RNAhybrid
PACKAGE_BUGREPORT = marc@techfak.uni-bielefeld.de
PACKAGE_NAME = RNAhybrid
PACKAGE_STRING = RNAhybrid 1.0
PACKAGE_TARNAME = RNAhybrid
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0
ac_ct_CC = gcc
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = /home/beretta/tmp/miRNA/happymirna/ext-progs/RNAhybrid-2.1.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/share/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

bin_PROGRAMS = RNAhybrid RNAcalibrate RNAeffective

RNAhybrid_SOURCES = \
	rnahybrid.c\
	hybrid_core.c\
	hybrid_core.h\
	energy.c\
	energy.h\
	input.c\
	input.h\
	fasta.c\
	fasta.h\
	globals.h\
	minmax.h\
	plot.c\
	plot.h


RNAcalibrate_SOURCES = \
	rnacalibrate.c\
	hybrid_core.c\
	hybrid_core.h\
	numerical.c\
	numerical.h\
	energy.c\
	energy.h\
	input.c\
	input.h\
	fasta.c\
	fasta.h\
	random.c\
	random.h\
	mt19937-1.c\
	mt19937-1.h\
	globals.h\
	minmax.h\
	plot.c\
	plot.h


RNAeffective_SOURCES = \
	rnaeffective.c\
	hybrid_core.c\
	hybrid_core.h\
	numerical.c\
	numerical.h\
	energy.c\
	energy.h\
	input.c\
	input.h\
	fasta.c\
	fasta.h\
	random.c\
	random.h\
	mt19937-1.c\
	mt19937-1.h\
	globals.h\
	minmax.h\
	plot.c\
	plot.h


INCLUDES = -I${includedir}
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = RNAhybrid$(EXEEXT) RNAcalibrate$(EXEEXT) \
	RNAeffective$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_RNAcalibrate_OBJECTS = rnacalibrate.$(OBJEXT) hybrid_core.$(OBJEXT) \
	numerical.$(OBJEXT) energy.$(OBJEXT) input.$(OBJEXT) \
	fasta.$(OBJEXT) random.$(OBJEXT) mt19937-1.$(OBJEXT) \
	plot.$(OBJEXT)
RNAcalibrate_OBJECTS = $(am_RNAcalibrate_OBJECTS)
RNAcalibrate_LDADD = $(LDADD)
RNAcalibrate_DEPENDENCIES =
RNAcalibrate_LDFLAGS =
am_RNAeffective_OBJECTS = rnaeffective.$(OBJEXT) hybrid_core.$(OBJEXT) \
	numerical.$(OBJEXT) energy.$(OBJEXT) input.$(OBJEXT) \
	fasta.$(OBJEXT) random.$(OBJEXT) mt19937-1.$(OBJEXT) \
	plot.$(OBJEXT)
RNAeffective_OBJECTS = $(am_RNAeffective_OBJECTS)
RNAeffective_LDADD = $(LDADD)
RNAeffective_DEPENDENCIES =
RNAeffective_LDFLAGS =
am_RNAhybrid_OBJECTS = rnahybrid.$(OBJEXT) hybrid_core.$(OBJEXT) \
	energy.$(OBJEXT) input.$(OBJEXT) fasta.$(OBJEXT) plot.$(OBJEXT)
RNAhybrid_OBJECTS = $(am_RNAhybrid_OBJECTS)
RNAhybrid_LDADD = $(LDADD)
RNAhybrid_DEPENDENCIES =
RNAhybrid_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/energy.Po ./$(DEPDIR)/fasta.Po \
	./$(DEPDIR)/hybrid_core.Po ./$(DEPDIR)/input.Po \
	./$(DEPDIR)/mt19937-1.Po ./$(DEPDIR)/numerical.Po \
	./$(DEPDIR)/plot.Po ./$(DEPDIR)/random.Po \
	./$(DEPDIR)/rnacalibrate.Po \
	./$(DEPDIR)/rnaeffective.Po \
	./$(DEPDIR)/rnahybrid.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(RNAcalibrate_SOURCES) $(RNAeffective_SOURCES) \
	$(RNAhybrid_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(RNAcalibrate_SOURCES) $(RNAeffective_SOURCES) $(RNAhybrid_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
RNAcalibrate$(EXEEXT): $(RNAcalibrate_OBJECTS) $(RNAcalibrate_DEPENDENCIES) 
	@rm -f RNAcalibrate$(EXEEXT)
	$(LINK) $(RNAcalibrate_LDFLAGS) $(RNAcalibrate_OBJECTS) $(RNAcalibrate_LDADD) $(LIBS)
RNAeffective$(EXEEXT): $(RNAeffective_OBJECTS) $(RNAeffective_DEPENDENCIES) 
	@rm -f RNAeffective$(EXEEXT)
	$(LINK) $(RNAeffective_LDFLAGS) $(RNAeffective_OBJECTS) $(RNAeffective_LDADD) $(LIBS)
RNAhybrid$(EXEEXT): $(RNAhybrid_OBJECTS) $(RNAhybrid_DEPENDENCIES) 
	@rm -f RNAhybrid$(EXEEXT)
	$(LINK) $(RNAhybrid_LDFLAGS) $(RNAhybrid_OBJECTS) $(RNAhybrid_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/energy.Po
include ./$(DEPDIR)/fasta.Po
include ./$(DEPDIR)/hybrid_core.Po
include ./$(DEPDIR)/input.Po
include ./$(DEPDIR)/mt19937-1.Po
include ./$(DEPDIR)/numerical.Po
include ./$(DEPDIR)/plot.Po
include ./$(DEPDIR)/random.Po
include ./$(DEPDIR)/rnacalibrate.Po
include ./$(DEPDIR)/rnaeffective.Po
include ./$(DEPDIR)/rnahybrid.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
